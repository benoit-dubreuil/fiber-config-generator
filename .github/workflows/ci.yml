name: 'CI'

# See `setup.cfg` for the configuration of a few tools used here.

on: [ push ]

jobs:
  clean_code:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: 'Setup the project'
        id: setup-project
        uses: ./.github/actions/setup-project

      - name: 'Format Python code with `brunette` and `black`'
        run: |
          brunette setup.py ${{ steps.setup-project.outputs.fcg }} ${{ steps.setup-project.outputs.scripts }} ${{ steps.setup-project.outputs.tests }}

      - name: 'Commit changes made by `brunette` and `black` formatters'
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "`${{ github.workflow }}.${{ github.job }}`: Formatted Python code with `brunette` and `black`"

      - name: 'Sort Python imports with `isort`'
        run: |
          isort --jobs 0 setup.py ${{ steps.setup-project.outputs.fcg }} ${{ steps.setup-project.outputs.scripts }} ${{ steps.setup-project.outputs.tests }}

      - name: 'Commit changes made by `isort`'
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "`${{ github.workflow }}.${{ github.job }}`: Sorted Python code with `isort`"

      - name: 'Upgrade Python syntax with `pyupgrade`'
        # The `--py38-plus` harcoded option must match the Python version defined in the file `.python-version`.
        run: |
          pyupgrade --py38-plus --exit-zero-even-if-changed \
            setup.py ${{ steps.setup-project.outputs.fcg }} ${{ steps.setup-project.outputs.scripts }} ${{ steps.setup-project.outputs.tests }}

      - name: 'Commit changes made by `pyupgrade`'
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "`${{ github.workflow }}.${{ github.job }}`: Upgraded Python syntax with `pyupgrade`"

      - name: 'Upgrade Python syntax in doc with `pyupgrade-docs`'
        # The `--py38-plus` harcoded option must match the Python version defined in the file `.python-version`.
        # TODO: Remove the `true` statement when the `--exit-zero-even-if-changed` option is fixed. See https://github.com/verhovsky/pyupgrade-docs/issues/6.
        run: |
          (git ls-files README.md 'doc/**.md' | xargs pyupgrade-docs --py38-plus --exit-zero-even-if-changed) || true

      - name: 'Commit changes made by `pyupgrade-docs`'
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "`${{ github.workflow }}.${{ github.job }}`: Upgraded Python syntax in doc with `pyupgrade-docs`"

  static_analysis:
    runs-on: ubuntu-latest
    needs: clean_code

    steps:
      - uses: actions/checkout@v3

      - name: 'Setup the project'
        id: setup-project
        uses: ./.github/actions/setup-project

      - name: 'Linting with `pylint`'
        run: |
          pylint --jobs 0 ${{ steps.setup-project.outputs.fcg }} ${{ steps.setup-project.outputs.scripts }}
          pylint --jobs 0 --disable=missing-docstring,protected-access ${{ steps.setup-project.outputs.tests }}
          pylint --disable=missing-docstring setup.py

      - name: 'Linting with `flake8`'
        run: |
          flake8 --show-source --statistics \
            setup.py ${{ steps.setup-project.outputs.fcg }} ${{ steps.setup-project.outputs.scripts }} ${{ steps.setup-project.outputs.tests }}

      - name: 'Check static types with `mypy`'
        run: |
          mypy ${{ steps.setup-project.outputs.fcg }} ${{ steps.setup-project.outputs.scripts }} ${{ steps.setup-project.outputs.tests }}

      - name: 'Test with `pytest`'
        run: |
          pytest ${{ steps.setup-project.outputs.tests }}