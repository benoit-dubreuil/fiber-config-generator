name: Static analysis

on: [ push ]

jobs:
  lint:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.8' ]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Start ssh-agent and add SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SIMULATION_GENERATOR_PULL_GIT_SSH_PRIVATE_KEY }}

      - name: Append Bitbucket SSH known host to known_hosts
        run: |
          cat "${GITHUB_WORKSPACE}/.github/workflows/config/.ssh/known_hosts.d/bitbucket.txt" >> ~/.ssh/known_hosts

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Find Python files in scripts/ and tests/
        id: find_python_files
        run: |
          echo "::set-output name=fcg::$(git ls-files 'fcg/**.py' | xargs echo)"
          echo "::set-output name=scripts::$(git ls-files 'scripts/**.py' | xargs echo)"
          echo "::set-output name=tests::$(git ls-files 'tests/**.py' | xargs echo)"

      - name: Linting with pylint
        run: |
          pylint -j 0 ${{ steps.find_python_files.outputs.fcg }} ${{ steps.find_python_files.outputs.scripts }}
          pylint -j 0 --disable=missing-docstring,protected-access ${{ steps.find_python_files.outputs.tests }}
          pylint -j 0 --disable=missing-docstring setup.py

      - name: Linting with flake8
        run: |
          flake8 ${{ steps.find_python_files.outputs.fcg }} ${{ steps.find_python_files.outputs.scripts }} ${{ steps.find_python_files.outputs.tests }}

      - name: Check static types with mypy
        run: |
          mypy ${{ steps.find_python_files.outputs.fcg }} ${{ steps.find_python_files.outputs.scripts }} ${{ steps.find_python_files.outputs.tests }}

      - name: Test with pytest
        run: |
          pytest ${{ steps.find_python_files.outputs.tests }}